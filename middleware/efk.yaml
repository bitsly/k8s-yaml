apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: middleware
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: elasticsearch
        image: elasticsearch:5.6.14-alpine
        ports:
        - containerPort: 9200
        - containerPort: 9300
        env:
        - name: discovery.type
          value: "single-node"
        volumeMounts:
        - name: elasticsearch-volume
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elasticsearch-volume
        hostPath:
          path: /mnt/data/elasticsearch/data

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: middleware
spec:
  ports:
  - name: 9200port
    port: 9200
    targetPort: 9200
  - name: 9300port
    port: 9300
    targetPort: 9300
  selector:
    app: elasticsearch


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: middleware
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: kibana
        image: kibana:5.6.14
        ports:
        - containerPort: 5601
        env:
          - name: ELASTICSEARCH_URL
            value: "http://elasticsearch:9200"
          - name: SERVER_BASEPATH
            value: "/api/v1/namespaces/kube-system/services/kibana-logging/proxy"

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: middleware
spec:
  externalIPs:
  - 192.168.11.3
  ports:
  - name: 5601port
    port: 5601
    targetPort: 5601
  selector:
    app: kibana

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-es
  namespace: middleware
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
  namespace: middleware
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "namespaces"
  - "pods"
  verbs:
  - "get"
  - "watch"
  - "list"

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
  namespace: middleware
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: fluentd-es
  namespace: middleware
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: fluentd-es
  apiGroup: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-configmap
  namespace: middleware
data:
  fluent.conf: |
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>
    <match **>
      @type elasticsearch
      logstash_format true
      host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      <buffer>
        flush_interval 5s
        flush_thread_count 4
      </buffer>
    </match>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentd
  namespace: middleware
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccount: fluentd-es
      serviceAccountName: fluentd-es
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.3.3-debian-elasticsearch-1.3
        ports:
        - containerPort: 24224
        env:
        - name: FLUENT_UID
          value: "0"
        - name: FLUENTD_SYSTEMD_CONF
          value: "disable"
        - name: FLUENT_ELASTICSEARCH_HOST
          value: elasticsearch
        - name:  FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        - name: FLUENT_ELASTICSEARCH_SCHEME
          value: "http"
        - name: FLUENT_ELASTICSEARCH_USER
          value: elastic
        - name: FLUENT_ELASTICSEARCH_PASSWORD
          value: changeme
        - name: FLUENT_ELASTICSEARCH_SED_DISABLE
          value: "true"
        volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
            - name: fluentd-config-volume
              mountPath: /fluentd/etc/fluent.conf
              subPath: fluent.conf
      volumes:
      - name: varlog
        hostPath:
          path: /mnt/data/fluentd/log
      - name: varlibdockercontainers
        hostPath:
          path: /mnt/data/fluentd/containers
      - name: fluentd-config-volume
        configMap:
          name: fluentd-configmap

---
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  namespace: middleware
spec:
  externalIPs:
  - 192.168.11.3
  ports:
  - name: 24224port
    port: 24224
    targetPort: 24224
  selector:
    app: fluentd

